from flask import Flask, jsonify, send_file
import json
import os
import subprocess

app = Flask(__name__)

# âœ… Local File Paths
TEST_CASES_FILE = "test_cases.json"       # Test case file (local)
SELENIUM_SCRIPT_FILE = "test_runner.py"   # Selenium script file (local)
REPORT_FILE = "report.json"               # Report output file

test_status = False


# âœ… Trigger Selenium Tests
def run_tests():
    global test_status

    # âœ… Check if the Selenium script exists
    if not os.path.exists(SELENIUM_SCRIPT_FILE):
        print("Selenium script not found locally.")
        test_status = False
        return

    try:
        print("\nRunning External Selenium Script...")

        # âœ… Run the Selenium script
        result = subprocess.run(
            ["python", SELENIUM_SCRIPT_FILE],
            capture_output=True,
            text=True,
            encoding='utf-8'  # Force UTF-8 encoding
        )

        # âœ… Display the output of the Selenium script
        print("\nSelenium Output:")
        print(result.stdout)
        print("\nSelenium Errors (if any):")
        print(result.stderr)

        # âœ… Check if the script execution was successful
        if result.returncode == 0:
            print("Selenium script executed successfully.")
            test_status = True  # All tests passed
        else:
            print("Selenium script failed with errors.")
            test_status = False

        # âœ… Load and process the report.json
        if os.path.exists(REPORT_FILE):
            with open(REPORT_FILE, "r", encoding="utf-8") as f:
                report = json.load(f)

            print("\nTest Execution Completed.")
            print(json.dumps(report, indent=4))

        else:
            print("No report generated by the external Selenium script.")
            test_status = False

    except Exception as e:
        print(f"Exception occurred: {str(e)}")
        test_status = False


# ðŸ”¥ Endpoint to trigger tests
@app.route('/run-tests', methods=['GET'])
def trigger_tests():
    run_tests()
    return jsonify({"message": "Test execution completed. Check the report."})


# ðŸ”¥ Endpoint to get the current test status + report
@app.route('/test-status', methods=['GET'])
def get_test_status():
    if os.path.exists(REPORT_FILE):
        with open(REPORT_FILE, "r", encoding="utf-8") as f:
            report = json.load(f)
        return jsonify({"status": test_status, "report": report})
    return jsonify({"status": False, "message": "No report available"})


# ðŸ”¥ Endpoint to serve the test report file
@app.route('/report', methods=['GET'])
def get_report():
    if os.path.exists(REPORT_FILE):
        return send_file(REPORT_FILE, as_attachment=True)
    return jsonify({"error": "Report not found"}), 404


if __name__ == '__main__':
    app.run(debug=True, port=5000)
